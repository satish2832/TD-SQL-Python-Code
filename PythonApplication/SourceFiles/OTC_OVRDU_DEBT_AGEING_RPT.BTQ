
/*************************************************************************************
SCRIPT NAME: OTC_OVRDU_DEBT_AGEING_RPT.BTQ
DESCRIPTION: PROCESS FOR OVERDUE DEBT AGEING AT SEMANTIC LAYER

AUTHOR            DATE
VARUN BASAVARAJU       2016-10-12 (ORIGINAL)
COMMENTS : THIS JOB SHOULD RUN AFTER THE ETL AND OTHER SEMANTIC TABLES LOAD FROM OTC
Change for excluding the Spl GL. Ind=“X” and Spl GL. Ind="Y" transactions from Overdue Ageing calculation.
Change for adding SNAP_MO_DT in Partition condition.
TD AM Sem           2017-05-19        3802
COMMENTS : As part of changes to BTEQ and semantic views to include multiple Company Code in Overdue and Ageing
TD AM SEM TEAM		2017-07-27	Performance improvement change: replacing ‘qualify’ clause with ‘group by’ Change id:4001
TD AM SEM TEAM		2018-03-27	   Adding condition to exclude region "I" data . Change id:4551
*************************************************************************************/
.RUN FILE=@TD_LOGON@;
SET QUERY_BAND='CAPABILITY=OTC;JOB_STREAM_NM=CNLV-SMOT-ODBAG;JOB_NM=CN_LV_SM_TD_OT_AGEING_RPT;BTEQ_NM=OTC_OVRDU_DEBT_AGEING_RPT;'  FOR SESSION;
.SET WIDTH 255
.SET ERROROUT STDOUT

/* ------------------------------------------------------------------------------------ */
/* VOLATILE TABLE FOR LAST 13 MONTHS DATA */
/* ------------------------------------------------------------------------------------ */

CREATE VOLATILE TABLE RPT_MNTS AS
(
SELECT ACTG_DOC_OVRDU_RPTG_DT AS RPT_DT
,ROW_NUMBER() OVER (ORDER BY ACTG_DOC_OVRDU_RPTG_DT DESC ) AS RNK
 FROM 
@WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS
QUALIFY RNK <14
WHERE DERIV_MEAS_SRC_CD = 'OD'
AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
GROUP BY 1
)
WITH DATA ON COMMIT PRESERVE ROWS
;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* VOLATILE CUSTOMER COUNTRY MAPPING TABLE */
/* ------------------------------------------------------------------------------------ */


CREATE VOLATILE TABLE CUST_CTRY_MAP
AS
(
SELECT * FROM 
(
SELECT 
CUST_ID AS CUSTOMER_NO
,CUST_NM                 
,VEND_ID
,CO_ID
,SNAP_MO_DT
FROM @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT
WHERE VEND_ID <>''
AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND SNAP_MO_DT >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)
GROUP BY 1,2,3,4,5
)A
QUALIFY ROW_NUMBER() OVER (PARTITION BY VEND_ID,CO_ID,SNAP_MO_DT ORDER BY CUSTOMER_NO DESC)=1
)
WITH DATA ON COMMIT PRESERVE ROWS
;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* VOLATILE CONTROL SERVIECS BILLING ITEM (VENDOR) TABLE */
/* ------------------------------------------------------------------------------------ */



CREATE VOLATILE TABLE CNTL_SRV_BIL_ITEMS AS
(
SELECT
COALESCE(A.COMPANY_CODE,'ALL') AS COMPANY_CODE
,COALESCE(A.REGION_ID,'ALL') AS REGION_ID
,COALESCE(A.SUB_REGIONIDENTIFIER,'ALL') AS CLUSTER_ID
,COALESCE(A.MCO_ID,'ALL') AS MCO_ID
,COALESCE(A.MSO_ID,'ALL') AS MSO_ID
,COALESCE(A.COUNTRY_CODE,'ALL') AS COUNTRY_CODE
,COALESCE(ACCOUNT_NO,'ALL') AS VENDOR_NO
,COALESCE(CUSTOMER_NO,'ALL') AS ACCOUNT_NO
,COALESCE(CUSTOMER_NAME,'ALL') AS CUSTOMER_NAME
,OVERDUE_PERIOD
,REPORT_DATE                   
,SUM(CTRL_SER_BIL_ITEMS) AS CTRL_SER_BIL_ITEMS
FROM 
(
SELECT
A.COMPANY_CODE
,COALESCE(GEO.RGN_ID,'UNKWN') AS REGION_ID
,COALESCE(GEO.CLUS_ID,'UNKWN') AS SUB_REGIONIDENTIFIER
,COALESCE(GEO.MCO_ID,'UNKWN') AS MCO_ID
,COALESCE(GEO.MSO_ID,'UNKWN') AS MSO_ID
,A.COUNTRY_CODE
,ACCOUNT_NO
,TRIM(CMAP.CUSTOMER_NO) AS CUSTOMER_NO
,COALESCE(CMAP.CUST_NM, 'Unknown') AS CUSTOMER_NAME
,OVERDUE_PERIOD
,A.RGN_IN
,REPORT_DATE                   
,CTRL_SER_BIL_ITEMS
FROM

(
SELECT
A.CO_ID AS COMPANY_CODE
,B.CTRY_CD AS COUNTRY_CODE
,A.ACTG_DOC_ACCT_ID AS ACCOUNT_NO
,A.RGN_IN
,A.ACTG_DOC_OVRDU_RPTG_DT AS REPORT_DATE
,A.ACTG_DOC_LINE_NET_DUE_DT AS NET_DUE_DATE            

,CASE 
WHEN (A.ACTG_DOC_OVRDU_RPTG_DT-A.ACTG_DOC_LINE_NET_DUE_DT)  BETWEEN 1 AND 7 THEN 'BUCKET_1TO7   ' 
WHEN (A.ACTG_DOC_OVRDU_RPTG_DT-A.ACTG_DOC_LINE_NET_DUE_DT)  BETWEEN 8 AND 30 THEN 'BUCKET_8TO30  ' 
WHEN (A.ACTG_DOC_OVRDU_RPTG_DT-A.ACTG_DOC_LINE_NET_DUE_DT)  BETWEEN 31 AND 60 THEN 'BUCKET_31TO60  ' 
WHEN (A.ACTG_DOC_OVRDU_RPTG_DT-A.ACTG_DOC_LINE_NET_DUE_DT)  BETWEEN 61 AND 180 THEN 'BUCKET_61TO180' 
WHEN (A.ACTG_DOC_OVRDU_RPTG_DT-A.ACTG_DOC_LINE_NET_DUE_DT)  > 180 THEN 'BUCKET_ABOVE180' 
ELSE 'UNKNOWN' END AS OVERDUE_PERIOD
,CAST(( CASE WHEN (POSITION(' ' IN TRIM(ACTG_DOC_PST_KEY_CD)) > 0) OR (UPPER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC) <> LOWER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC))     THEN  NULL     ELSE ACTG_DOC_PST_KEY_CD     END ) AS INTEGER) AS POSTING_KEY
,SUM(EUR_CURY_OVRDU_DEBT_AMT) AS CTRL_SER_BIL_ITEMS

FROM  @WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS A

JOIN @WWP_BASE_VIEW_DB@.WWP_CO B
ON A.CO_ID=B.CO_ID
AND A.FIN_PST_RLVNC_TYPE_CD NOT IN ('X','Y')  ----Changes for excluding the Spl GL. Ind=“X” and Spl GL. Ind="Y"
AND A.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND B.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND A.ACTG_DOC_TYPE_CD IN ('KC','KD','DZ')
AND A.DERIV_MEAS_SRC_CD = 'OD'
AND A.ACTG_DOC_LINE_NET_DUE_DT < A.ACTG_DOC_OVRDU_RPTG_DT
AND A.ACTG_DOC_OVRDU_RPTG_DT >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)

WHERE POSTING_KEY > 20 AND POSTING_KEY < 40

GROUP BY 1,2,3,4,5,6,7,8
) A

INNER JOIN CUST_CTRY_MAP CMAP
ON A.ACCOUNT_NO=CMAP.VEND_ID
AND A.COMPANY_CODE=CMAP.CO_ID
AND A.REPORT_DATE=CMAP.SNAP_MO_DT

LEFT JOIN @WWP_BASE_VIEW_DB@."WWP_GEO_ANY_LVL" GEO
ON A.COUNTRY_CODE=GEO.CTRY_CD
AND GEO.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

) A
WHERE (ACCOUNT_NO,A.COMPANY_CODE,A.RGN_IN, A.REPORT_DATE) NOT IN (SELECT CUST_ID AS ACCOUNT_NO, CO_ID AS COMPANY_CODE, RGN_IN, SNAP_MO_DT  FROM @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT
														WHERE ((RGN_IN IN ('A','E') AND CR_REP_GRP_CD ='99')
														OR (RGN_IN in ('I','R') AND ACTG_CLERK_GRP_CD='AB')) AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000' ) --Change id:4551
AND A.REPORT_DATE IN (SELECT RPT_DT FROM RPT_MNTS)
GROUP BY GROUPING SETS
(
(COMPANY_CODE,REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),
(COMPANY_CODE,REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,REPORT_DATE,OVERDUE_PERIOD), -- Added as part of Change ID#3802

(REGION_ID,REPORT_DATE,OVERDUE_PERIOD),
(REGION_ID,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),

(REGION_ID,SUB_REGIONIDENTIFIER,REPORT_DATE,OVERDUE_PERIOD),
(REGION_ID,SUB_REGIONIDENTIFIER,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,REPORT_DATE,OVERDUE_PERIOD),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,REPORT_DATE,OVERDUE_PERIOD),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,REPORT_DATE,OVERDUE_PERIOD),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),

(REPORT_DATE,OVERDUE_PERIOD),
(ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD)
)
)
WITH DATA ON COMMIT PRESERVE ROWS
;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* Delete all the rows to load lastest data */
/* ------------------------------------------------------------------------------------ */
BT;

DELETE FROM @BASE_VIEW_DB@.FCT_OTC_OVRDU_DEBT_AGEING_RPT;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;
/* ------------------------------------------------------------------------------------ */
/* Insert all the rows to load lastest data from EL table WWP_OTC_ACTG_DOC_LINE_MEAS */
/* ------------------------------------------------------------------------------------ */



INSERT INTO @BASE_VIEW_DB@.FCT_OTC_OVRDU_DEBT_AGEING_RPT
(
CO_ID
,RGN_ID
,CLUS_ID
,MCO_ID
,MSO_ID
,CTRY_CD
,CUST_NUM
,CUST_NM
,RPT_DT
,OVRDU_PER
,OVRDU_DEBT_ABS_GRS_AMT
,CNTL_SRVC
,OVRDU_DEBT_ABS_NET_AMT
)
SELECT 
OD.COMPANY_CODE
,OD.REGION_ID
,OD.CLUSTER_ID
,OD.MCO_ID
,OD.MSO_ID
,OD.COUNTRY_CODE
,TRIM(OD.ACCOUNT_NO) AS ACCOUNT_NO
,OD.CUSTOMER_NAME
,OD.REPORT_DATE
,OD.OVERDUE_PERIOD
,OD.OVERDUE_DEBT_ABS_GROSS
,COALESCE(CSB.CTRL_SER_BIL_ITEMS,0.00) AS CTRL_SERVICE
,OVERDUE_DEBT_ABS_GROSS+CTRL_SERVICE AS OVERDUE_DEBT_ABS_NET

FROM
(
SELECT
COALESCE(XXX.COMPANY_CODE,'ALL') AS COMPANY_CODE
,COALESCE(XXX.REGION_ID,'ALL') AS REGION_ID
,COALESCE(XXX.SUB_REGIONIDENTIFIER,'ALL') AS CLUSTER_ID
,COALESCE(XXX.MCO_ID,'ALL') AS MCO_ID
,COALESCE(XXX.MSO_ID,'ALL') AS MSO_ID
,COALESCE(XXX.COUNTRY_CODE,'ALL') AS COUNTRY_CODE
,COALESCE(TRIM(XXX.ACCOUNT_NO),'ALL') AS ACCOUNT_NO
,COALESCE(CUSTOMER_NAME,'ALL') AS CUSTOMER_NAME
,XXX.REPORT_DATE
,XXX.OVERDUE_PERIOD
,SUM(XXX.OVERDUE_DEBT_ABS_GROSS) AS OVERDUE_DEBT_ABS_GROSS
   
FROM
(
SELECT
B.COMPANY_CODE,
COALESCE(GEO.RGN_ID,'UNKWN') AS REGION_ID,
COALESCE(GEO.CLUS_ID,'UNKWN') AS SUB_REGIONIDENTIFIER,
COALESCE(GEO.MCO_ID,'UNKWN') AS MCO_ID,
COALESCE(GEO.MSO_ID,'UNKWN') AS MSO_ID,
B.COUNTRY_CODE,
TRIM(B.ACCOUNT_NO) ACCOUNT_NO
,COALESCE(CUST.CUSTOMER_NAME,'UNKNOWN') AS CUSTOMER_NAME
,B.RGN_IN
,B.REPORT_DATE
,B.OVERDUE_PERIOD
,OVERDUE_DEBT_ABS_GROSS
FROM
(
SELECT
A.CO_ID AS COMPANY_CODE
,B.CTRY_CD AS COUNTRY_CODE
,A.ACTG_DOC_ACCT_ID AS ACCOUNT_NO
,A.RGN_IN
,A.ACTG_DOC_OVRDU_RPTG_DT AS REPORT_DATE
,A.ACTG_DOC_LINE_NET_DUE_DT AS NET_DUE_DATE            

,CASE 
WHEN (A.ACTG_DOC_OVRDU_RPTG_DT-A.ACTG_DOC_LINE_NET_DUE_DT)  BETWEEN 1 AND 7 THEN 'BUCKET_1TO7   ' 
WHEN (A.ACTG_DOC_OVRDU_RPTG_DT-A.ACTG_DOC_LINE_NET_DUE_DT)  BETWEEN 8 AND 30 THEN 'BUCKET_8TO30  ' 
WHEN (A.ACTG_DOC_OVRDU_RPTG_DT-A.ACTG_DOC_LINE_NET_DUE_DT)  BETWEEN 31 AND 60 THEN 'BUCKET_31TO60  ' 
WHEN (A.ACTG_DOC_OVRDU_RPTG_DT-A.ACTG_DOC_LINE_NET_DUE_DT)  BETWEEN 61 AND 180 THEN 'BUCKET_61TO180' 
WHEN (A.ACTG_DOC_OVRDU_RPTG_DT-A.ACTG_DOC_LINE_NET_DUE_DT)  > 180 THEN 'BUCKET_ABOVE180' 
ELSE 'UNKNOWN' END AS OVERDUE_PERIOD
,CAST(( CASE WHEN (POSITION(' ' IN TRIM(ACTG_DOC_PST_KEY_CD)) > 0) OR (UPPER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC) <> LOWER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC))     THEN  NULL     ELSE ACTG_DOC_PST_KEY_CD     END ) AS INTEGER) AS POSTING_KEY
,SUM(EUR_CURY_OVRDU_DEBT_AMT) AS OVERDUE_DEBT_ABS_GROSS

FROM  @WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS A

JOIN @WWP_BASE_VIEW_DB@.WWP_CO B
ON A.CO_ID=B.CO_ID
AND A.FIN_PST_RLVNC_TYPE_CD NOT IN ('X','Y') ----Changes for excluding the Spl GL. Ind=“X” and Spl GL. Ind="Y"
AND A.DERIV_MEAS_SRC_CD = 'OD'
AND A.ACTG_DOC_LINE_NET_DUE_DT < A.ACTG_DOC_OVRDU_RPTG_DT
AND A.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND B.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND A.ACTG_DOC_OVRDU_RPTG_DT >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)

WHERE POSTING_KEY<20


GROUP BY 1,2,3,4,5,6,7,8
)B

LEFT JOIN @WWP_BASE_VIEW_DB@."WWP_GEO_ANY_LVL" GEO
ON B.COUNTRY_CODE=GEO.CTRY_CD
AND GEO.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

LEFT JOIN 
(
/* Performance recomendation Change id:4001*/

SELECT CUST_ID AS CUSTOMER_NO ,
 MAX(CUST_NM) AS CUSTOMER_NAME,
 RGN_IN, 
SNAP_MO_DT
FROM    @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT 
WHERE    ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND SNAP_MO_DT >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)
  GROUP BY 1,3,4
) CUST
ON B.ACCOUNT_NO=CUST.CUSTOMER_NO
AND B.RGN_IN=CUST.RGN_IN
AND B.REPORT_DATE=CUST.SNAP_MO_DT 

WHERE (ACCOUNT_NO,B.COMPANY_CODE,B.RGN_IN, B.REPORT_DATE) NOT IN (SELECT CUST_ID AS ACCOUNT_NO, CO_ID AS COMPANY_CODE, RGN_IN, SNAP_MO_DT  FROM @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT
														WHERE ((RGN_IN IN ('A','E') AND CR_REP_GRP_CD ='99')
														OR (RGN_IN in ('I','R') AND ACTG_CLERK_GRP_CD='AB')) AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000' ) --Change id:4551

)XXX
GROUP BY GROUPING SETS
(
(COMPANY_CODE,REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),
(COMPANY_CODE,REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,REPORT_DATE,OVERDUE_PERIOD), -- Added as part of Change ID#3802

(REGION_ID,REPORT_DATE,OVERDUE_PERIOD),
(REGION_ID,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),

(REGION_ID,SUB_REGIONIDENTIFIER,REPORT_DATE,OVERDUE_PERIOD),
(REGION_ID,SUB_REGIONIDENTIFIER,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,REPORT_DATE,OVERDUE_PERIOD),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,REPORT_DATE,OVERDUE_PERIOD),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,REPORT_DATE,OVERDUE_PERIOD),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD),

(REPORT_DATE,OVERDUE_PERIOD),
(ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE,OVERDUE_PERIOD)
)
) OD

LEFT JOIN CNTL_SRV_BIL_ITEMS CSB
ON OD.REGION_ID=CSB.REGION_ID
AND OD.COMPANY_CODE=CSB.COMPANY_CODE
AND OD.CLUSTER_ID=CSB.CLUSTER_ID
AND OD.MCO_ID=CSB.MCO_ID
AND OD.MSO_ID=CSB.MSO_ID
AND OD.COUNTRY_CODE=CSB.COUNTRY_CODE
AND OD.ACCOUNT_NO=CSB.ACCOUNT_NO
AND OD.CUSTOMER_NAME=CSB.CUSTOMER_NAME
AND OD.OVERDUE_PERIOD=CSB.OVERDUE_PERIOD
AND OD.REPORT_DATE=CSB.REPORT_DATE

WHERE OD.REPORT_DATE IN (SELECT RPT_DT FROM RPT_MNTS)

;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

ET;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;
/* ------------------------------------------------------------------------------------ */
/*  COLLECT STATS									*/
/*								                         */
/* ------------------------------------------------------------------------------------ */
 CALL DBADMIN.COLLECT_STATS ('@BASE_VIEW_DB@','FCT_OTC_OVRDU_DEBT_AGEING_RPT','','V','','','','',STMNTOUT);
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;
SELECT CURRENT_TIMESTAMP ;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE
SET QUERY_BAND=NONE FOR SESSION;
.QUIT 0
