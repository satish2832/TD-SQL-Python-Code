
/*************************************************************************************
SCRIPT NAME: OTC_OVRDU_DEBT_RPT.BTQ
DESCRIPTION: PROCESS FOR OVERDUE DEBT REPORT AT SEMANTIC LAYER

AUTHOR            DATE
VARUN BASAVARAJU       2016-10-12 (ORIGINAL)
COMMENTS : THIS JOB SHOULD RUN AFTER THE ETL AND OTHER SEMANTIC TABLE FCT_OTC_OVRDU_DEBT_RPT LOAD FROM OTC
TD AM Sem           2017-05-19		3802
COMMENTS : As part of changes to BTEQ and semantic views to include multiple Company Code in Overdue and Ageing
TD AM SEM TEAM		2017-07-27	Performance improvement change: replacing ‘qualify’ clause with ‘group by’ Change id:4001
TD AM SEM TEAM		2018-03-27	Adding condition to exclude region "I" data . Change id:4551
*************************************************************************************/
.RUN FILE=@TD_LOGON@;
SET QUERY_BAND='CAPABILITY=OTC;JOB_STREAM_NM=CNLV-SMOT-ODUEDB;JOB_NM=CN_LV_SM_TD_OT_DEBT_RPT;BTEQ_NM=OTC_OVRDU_DEBT_RPT;'  FOR SESSION;
.SET WIDTH 255
.SET ERROROUT STDOUT

/* ------------------------------------------------------------------------------------ */
/* VOLATILE MAX AND MIN MONTH TABLE */
/* ------------------------------------------------------------------------------------ */


CREATE VOLATILE TABLE MX_MTH AS
(
SELECT MIN(ACTG_DOC_OVRDU_RPTG_DT) AS MIN_MTH,MAX(ACTG_DOC_OVRDU_RPTG_DT) AS MAX_MTH FROM @WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS
WHERE DERIV_MEAS_SRC_CD = 'OD' AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
)
WITH DATA ON COMMIT PRESERVE ROWS
;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* VOLATILE TABLE FOR LAST 13 MONTHS DATA */
/* ------------------------------------------------------------------------------------ */

CREATE VOLATILE TABLE RPT_MNTS AS
(
SELECT ACTG_DOC_OVRDU_RPTG_DT AS RPT_DT
,ROW_NUMBER() OVER (ORDER BY ACTG_DOC_OVRDU_RPTG_DT DESC ) AS RNK
 FROM 
@WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS
QUALIFY RNK <14
WHERE DERIV_MEAS_SRC_CD = 'OD'
AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
GROUP BY 1
)
WITH DATA ON COMMIT PRESERVE ROWS
;


/* ------------------------------------------------------------------------------------ */
/* VOLATILE TABLE FOR CUSTOMER COUNTRY MAPPING VENDOR DATA */
/* ------------------------------------------------------------------------------------ */


CREATE VOLATILE TABLE CUST_CTRY_MAP
AS
(
SELECT * FROM 
(
SELECT 
CUST_ID  AS CUSTOMER_NO
,CUST_NM                 
,VEND_ID
,CO_ID
,SNAP_MO_DT
FROM @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT
WHERE VEND_ID <>''
AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND SNAP_MO_DT >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)
GROUP BY 1,2,3,4,5
)A
QUALIFY ROW_NUMBER() OVER (PARTITION BY VEND_ID,CO_ID,SNAP_MO_DT ORDER BY CUSTOMER_NO DESC)=1
)
WITH DATA ON COMMIT PRESERVE ROWS
;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* VOLATILE TABLE FOR CONTROL TOTAL DEBT*/
/* ------------------------------------------------------------------------------------ */


CREATE VOLATILE TABLE TOTAL_DEBT AS
(
SELECT
COMPANY_CODE
,REGION_ID
,CLUSTER_ID
,MCO_ID
,MSO_ID
,COUNTRY_CODE
,ACCOUNT_NO
,CUSTOMER_NAME
,REPORT_DATE                      
,TOTAL_DEBT
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN SUM(TOTAL_DEBT) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS TOTAL_DEBT_SUM
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN AVG(TOTAL_DEBT) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS TOTAL_DEBT_AVG
FROM
(
SELECT
COALESCE(A.COMPANY_CODE,'ALL') AS COMPANY_CODE
,COALESCE(A.REGION_ID,'ALL') AS REGION_ID
,COALESCE(A.SUB_REGIONIDENTIFIER,'ALL') AS CLUSTER_ID
,COALESCE(A.MCO_ID,'ALL') AS MCO_ID
,COALESCE(A.MSO_ID,'ALL') AS MSO_ID
,COALESCE(A.COUNTRY_CODE,'ALL') AS COUNTRY_CODE
,COALESCE(ACCOUNT_NO,'ALL') AS ACCOUNT_NO
,COALESCE(CUSTOMER_NAME,'ALL') AS CUSTOMER_NAME
, REPORT_DATE                      
,SUM(EUR_CURY_OVRDU_DEBT_AMT) AS TOTAL_DEBT
FROM 

(SELECT
A.CO_ID AS COMPANY_CODE
,COALESCE(GEO.RGN_ID,'UNKWN') AS REGION_ID
,COALESCE(GEO.CLUS_ID,'UNKWN') AS SUB_REGIONIDENTIFIER
,COALESCE(GEO.MCO_ID,'UNKWN') AS MCO_ID
,COALESCE(GEO.MSO_ID,'UNKWN') AS MSO_ID
,COALESCE(B.CTRY_CD,'ALL') AS COUNTRY_CODE
,A.ACTG_DOC_ACCT_ID AS ACCOUNT_NO
,COALESCE(CUST.CUSTOMER_NAME,'UNKNOWN') AS CUSTOMER_NAME
,A.ACTG_DOC_OVRDU_RPTG_DT AS REPORT_DATE
,A.RGN_IN 
,A.EUR_CURY_OVRDU_DEBT_AMT
,CAST(( CASE WHEN (POSITION(' ' IN TRIM(ACTG_DOC_PST_KEY_CD)) > 0) OR (UPPER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC) <> LOWER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC))     THEN  NULL     ELSE ACTG_DOC_PST_KEY_CD     END ) AS INTEGER) AS POSTING_KEY

FROM @WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS A

JOIN @WWP_BASE_VIEW_DB@.WWP_CO B
ON A.CO_ID=B.CO_ID
AND FIN_PST_RLVNC_TYPE_CD NOT IN ('X','Y')
AND DERIV_MEAS_SRC_CD = 'OD'
AND A.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND B.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000' 
AND A.ACTG_DOC_OVRDU_RPTG_DT >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)


LEFT JOIN @WWP_BASE_VIEW_DB@."WWP_GEO_ANY_LVL" GEO
ON B.CTRY_CD=GEO.CTRY_CD
AND GEO.GEO_TYPE_CD='CTRY'
AND GEO.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

LEFT JOIN 
(
/* Performance recomendation Change id:4001*/

SELECT CUST_ID AS CUSTOMER_NO , 
MAX(CUST_NM) AS CUSTOMER_NAME,
CO_ID, 
SNAP_MO_DT
FROM    @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT 
WHERE    ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
  GROUP BY 1,3,4
) CUST
ON A.ACTG_DOC_ACCT_ID=CUST.CUSTOMER_NO
AND A.CO_ID=CUST.CO_ID
AND A.ACTG_DOC_OVRDU_RPTG_DT=CUST.SNAP_MO_DT

WHERE   POSTING_KEY<20
) A
WHERE (ACCOUNT_NO,A.COMPANY_CODE,A.RGN_IN, A.REPORT_DATE) NOT IN (SELECT CUST_ID AS ACCOUNT_NO, CO_ID AS COMPANY_CODE, RGN_IN, SNAP_MO_DT  FROM @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT
              WHERE ((RGN_IN IN ('A','E') AND CR_REP_GRP_CD ='99')
              OR (RGN_IN in ('I','R') AND ACTG_CLERK_GRP_CD='AB')) AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000') --Change id:4551
GROUP BY GROUPING SETS
(
(COMPANY_CODE,REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),
(COMPANY_CODE,REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,REPORT_DATE),   -- Added as part of Change ID#3802

(REGION_ID,REPORT_DATE),
(REGION_ID,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),

(REPORT_DATE),
(ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE)
)
)A
CROSS JOIN MX_MTH
WHERE A.REPORT_DATE >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)
)
WITH DATA ON COMMIT PRESERVE ROWS
;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* VOLATILE TABLE FOR CONTROL SERVICES BILLING ITEMS (VENDOR)*/
/* ------------------------------------------------------------------------------------ */


CREATE VOLATILE TABLE CNTL_SRV_BIL_ITEMS AS
(
SELECT
COMPANY_CODE
,REGION_ID
,CLUSTER_ID
,MCO_ID
,MSO_ID
,COUNTRY_CODE
,VENDOR_NO
,ACCOUNT_NO
,CUSTOMER_NAME
,REPORT_DATE                      
,CTRL_SER_BIL_ITEMS
,TOT_CTRL_SER_BIL_ITEMS
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN SUM(CTRL_SER_BIL_ITEMS) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS CTRL_SER_BIL_ITEMS_SUM
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN AVG(CTRL_SER_BIL_ITEMS) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS CTRL_SER_BIL_ITEMS_AVG

FROM
(
SELECT
COALESCE(A.COMPANY_CODE,'ALL') AS COMPANY_CODE
,COALESCE(A.REGION_ID,'ALL') AS REGION_ID
,COALESCE(A.SUB_REGIONIDENTIFIER,'ALL') AS CLUSTER_ID
,COALESCE(A.MCO_ID,'ALL') AS MCO_ID
,COALESCE(A.MSO_ID,'ALL') AS MSO_ID
,COALESCE(A.COUNTRY_CODE,'ALL') AS COUNTRY_CODE
,COALESCE(ACCOUNT_NO,'ALL') AS VENDOR_NO
,COALESCE(A.CUSTOMER_NO,'ALL') AS ACCOUNT_NO
,COALESCE(A.CUSTOMER_NAME,'ALL') AS CUSTOMER_NAME
,REPORT_DATE                   
,SUM(OVERDUE_CSB) AS CTRL_SER_BIL_ITEMS
,SUM(TOTAL_CSB) AS TOT_CTRL_SER_BIL_ITEMS
FROM 
(
SELECT
A.CO_ID AS COMPANY_CODE
,COALESCE(GEO.RGN_ID,'UNKWN') AS REGION_ID
,COALESCE(GEO.CLUS_ID,'UNKWN') AS SUB_REGIONIDENTIFIER
,COALESCE(GEO.MCO_ID,'UNKWN') AS MCO_ID
,COALESCE(GEO.MSO_ID,'UNKWN') AS MSO_ID
,COALESCE(B.CTRY_CD,'UNKNOWN') AS COUNTRY_CODE
,ACTG_DOC_ACCT_ID AS ACCOUNT_NO
,CMAP.CUSTOMER_NO
,COALESCE(CUST.CUSTOMER_NAME,'UNKNOWN') AS CUSTOMER_NAME
,A.RGN_IN 
,A.ACTG_DOC_OVRDU_RPTG_DT AS REPORT_DATE                   
,A.EUR_CURY_OVRDU_DEBT_AMT AS TOTAL_CSB
,CASE WHEN ACTG_DOC_LINE_NET_DUE_DT < A.ACTG_DOC_OVRDU_RPTG_DT THEN EUR_CURY_OVRDU_DEBT_AMT ELSE 0 END AS OVERDUE_CSB
,CAST(( CASE WHEN (POSITION(' ' IN TRIM(ACTG_DOC_PST_KEY_CD)) > 0) OR (UPPER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC) <> LOWER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC))         THEN  NULL        ELSE ACTG_DOC_PST_KEY_CD         END ) AS INTEGER) AS POSTING_KEY
FROM @WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS A

JOIN @WWP_BASE_VIEW_DB@.WWP_CO B
ON A.CO_ID=B.CO_ID
AND ACTG_DOC_TYPE_CD IN ('KC','KD','DZ')
AND FIN_PST_RLVNC_TYPE_CD NOT IN ('X','Y')
AND ACTG_DOC_LINE_NET_DUE_DT < A.ACTG_DOC_OVRDU_RPTG_DT
AND DERIV_MEAS_SRC_CD = 'OD'
AND A.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND B.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND A.ACTG_DOC_OVRDU_RPTG_DT >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)

INNER JOIN CUST_CTRY_MAP CMAP
ON A.ACTG_DOC_ACCT_ID=CMAP.VEND_ID
AND A.CO_ID=CMAP.CO_ID
AND A.ACTG_DOC_OVRDU_RPTG_DT=CMAP.SNAP_MO_DT

LEFT JOIN @WWP_BASE_VIEW_DB@."WWP_GEO_ANY_LVL" GEO
ON B.CTRY_CD=GEO.CTRY_CD
AND GEO.GEO_TYPE_CD='CTRY'
AND GEO.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

LEFT JOIN 
(
/* Performance recomendation Change id:4001*/

SELECT CUST_ID AS CUSTOMER_NO , 
MAX(CUST_NM) AS CUSTOMER_NAME,
CO_ID, 
SNAP_MO_DT
FROM    @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT 
WHERE    ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
  GROUP BY 1,3,4																				   
) CUST
ON CMAP.CUSTOMER_NO=CUST.CUSTOMER_NO
AND A.CO_ID=CUST.CO_ID
AND A.ACTG_DOC_OVRDU_RPTG_DT=CUST.SNAP_MO_DT


WHERE POSTING_KEY > 20 

) A

WHERE POSTING_KEY < 40 AND (ACCOUNT_NO,A.COMPANY_CODE,A.RGN_IN, A.REPORT_DATE) NOT IN (SELECT CUST_ID AS ACCOUNT_NO, CO_ID AS COMPANY_CODE, RGN_IN, SNAP_MO_DT  FROM @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT
              WHERE ((RGN_IN IN ('A','E') AND CR_REP_GRP_CD ='99')
              OR (RGN_IN in ('I','R') AND ACTG_CLERK_GRP_CD='AB')) AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000') --Change id:4551

GROUP BY GROUPING SETS
(
(COMPANY_CODE,REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),
(COMPANY_CODE,REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,REPORT_DATE),-- Added as part of Change ID#3802

(REGION_ID,REPORT_DATE),
(REGION_ID,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),

(REPORT_DATE),
(ACCOUNT_NO,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE)
)

)A

CROSS JOIN MX_MTH
WHERE A.REPORT_DATE >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)
)
WITH DATA ON COMMIT PRESERVE ROWS
;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;
/* ------------------------------------------------------------------------------------ */
/* Delete all the rows to load lastest data */
/* ------------------------------------------------------------------------------------ */

BT;

DELETE from @BASE_VIEW_DB@.FCT_OTC_OVRDU_DEBT_RPT;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* Insert all the rows to load lastest data from EL table WWP_OTC_ACTG_DOC_LINE_MEAS */
/* ------------------------------------------------------------------------------------ */



INSERT INTO @BASE_VIEW_DB@.FCT_OTC_OVRDU_DEBT_RPT
(
CO_ID
,RGN_ID
,CLUS_ID
,MCO_ID
,MSO_ID
,CTRY_CD
,CUST_NUM
,CUST_NM
,RPT_DT
,MO_NUM
,YR_NUM
,TOT_DEBT
,CNTL_SRVC
,OVRDU_DEBT_ABS_GRS_AMT
,OVRDU_DEBT_GRS_PCT
,OVRDU_DEBT_ABS_NET_AMT
,OVRDU_DEBT_NET_PCT
,TOT_DEBT_SUM
,TOT_DEBT_AVG
,CNTL_SRVC_SUM
,CNTL_SRVC_AVG
,OVRDU_DEBT_ABS_GRS_SUM
,OVRDU_DEBT_ABS_GRS_AVG
,OVRDU_DEBT_ABS_GRS_PCT
,OVRDU_DEBT_ABS_NET_SUM
,OVRDU_DEBT_ABS_NET_AVG
,OVRDU_DEBT_ABS_NET_PCT
)
SELECT * FROM (
SELECT 
COMPANY_CODE
,REGION_ID
,CLUSTER_ID
,MCO_ID
,MSO_ID
,COUNTRY_CODE
,ACCOUNT_NO
,CUSTOMER_NAME
,X.REPORT_DATE                   
,EXTRACT(MONTH FROM X.REPORT_DATE) AS MONTH_NO 
,EXTRACT(YEAR FROM X.REPORT_DATE) AS YEAR_NO
,TOTAL_DEBT
,CTRL_SERVICE
,OVERDUE_DEBT_ABS_GROSS
,OVERDUE_DEBT_PER_GROSS
,OVERDUE_DEBT_ABS_NET
,OVERDUE_DEBT_PER_NET
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN SUM(TOTAL_DEBT) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS TOTAL_DEBT_SUM
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN AVG(TOTAL_DEBT) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS TOTAL_DEBT_AVG
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN SUM(CTRL_SERVICE) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS CTRL_SERVICE_SUM
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN AVG(CTRL_SERVICE) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS CTRL_SERVICE_AVG
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN SUM(OVERDUE_DEBT_ABS_GROSS) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS OVERDUE_DEBT_ABS_GROSS_SUM
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN AVG(OVERDUE_DEBT_ABS_GROSS) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS OVERDUE_DEBT_ABS_GROSS_AVG
,COALESCE(100*NULLIFZERO(OVERDUE_DEBT_ABS_GROSS_SUM)/NULLIFZERO(TOTAL_DEBT_SUM),0) AS OVERDUE_DEBT_PER_GROSS_AVG
,(OVERDUE_DEBT_ABS_GROSS_SUM+CTRL_SERVICE_SUM) AS OVERDUE_DEBT_ABS_NET_SUM
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN AVG(OVERDUE_DEBT_ABS_NET) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS OVERDUE_DEBT_ABS_NET_AVG
,COALESCE(100*NULLIFZERO(OVERDUE_DEBT_ABS_NET_SUM)/NULLIFZERO(TOTAL_DEBT_SUM+(CASE WHEN REPORT_DATE>MIN_MTH+305 THEN SUM(TOT_CTRL_SERVICE) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,ACCOUNT_NO,CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END)),0) AS OVERDUE_DEBT_PER_NET_AVG
FROM
(
SELECT 
OD.COMPANY_CODE
,OD.REGION_ID
,OD.CLUSTER_ID
,OD.MCO_ID
,OD.MSO_ID
,OD.COUNTRY_CODE
,TRIM(OD.ACCOUNT_NO) AS ACCOUNT_NO
,OD.CUSTOMER_NAME
,OD.REPORT_DATE
,TD.TOTAL_DEBT
,COALESCE(CSB.CTRL_SER_BIL_ITEMS,0.00) AS CTRL_SERVICE
,COALESCE(CSB.TOT_CTRL_SER_BIL_ITEMS,0.00) AS TOT_CTRL_SERVICE
,OVERDUE_DEBT_ABS_GROSS
,COALESCE(100*NULLIFZERO(OVERDUE_DEBT_ABS_GROSS)/NULLIFZERO(TOTAL_DEBT),0) AS OVERDUE_DEBT_PER_GROSS
,OVERDUE_DEBT_ABS_GROSS+CTRL_SERVICE AS OVERDUE_DEBT_ABS_NET
,COALESCE(100*NULLIFZERO(OVERDUE_DEBT_ABS_NET)/NULLIFZERO(TOTAL_DEBT+TOT_CTRL_SERVICE),0) AS OVERDUE_DEBT_PER_NET


FROM
(
SELECT 
COALESCE(A.COMPANY_CODE,'ALL') AS COMPANY_CODE
,COALESCE(A.REGION_ID,'ALL') AS REGION_ID
,COALESCE(A.SUB_REGIONIDENTIFIER,'ALL') AS CLUSTER_ID
,COALESCE(A.MCO_ID,'ALL') AS MCO_ID
,COALESCE(A.MSO_ID,'ALL') AS MSO_ID
,COALESCE(A.CTRY_CD,'ALL') AS COUNTRY_CODE
,COALESCE(ACCOUNT_NO,'ALL') AS ACCOUNT_NO
,COALESCE(CUSTOMER_NAME,'ALL') AS CUSTOMER_NAME
,A.REPORT_DATE                   
,SUM(EUR_CURY_OVRDU_DEBT_AMT) AS OVERDUE_DEBT_ABS_GROSS


FROM  
(
SELECT 
A.CO_ID AS COMPANY_CODE
,COALESCE(GEO.RGN_ID,'UNKWN') AS REGION_ID
,COALESCE(GEO.CLUS_ID,'UNKWN') AS SUB_REGIONIDENTIFIER
,COALESCE(GEO.MCO_ID,'UNKWN') AS MCO_ID
,COALESCE(GEO.MSO_ID,'UNKWN') AS MSO_ID
,COALESCE(B.CTRY_CD,'UNKNOWN') AS CTRY_CD
,ACTG_DOC_ACCT_ID AS ACCOUNT_NO
,COALESCE(CUST.CUSTOMER_NAME,'UNKNOWN') AS CUSTOMER_NAME
,A.RGN_IN 
,A.ACTG_DOC_OVRDU_RPTG_DT AS REPORT_DATE                   
,EUR_CURY_OVRDU_DEBT_AMT
,CAST(( CASE WHEN (POSITION(' ' IN TRIM(ACTG_DOC_PST_KEY_CD)) > 0) OR (UPPER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC) <> LOWER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC))     THEN  NULL     ELSE ACTG_DOC_PST_KEY_CD     END ) AS INTEGER) AS POSTING_KEY

FROM  @WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS A

JOIN @WWP_BASE_VIEW_DB@.WWP_CO B
ON A.CO_ID=B.CO_ID
AND A.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND B.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND DERIV_MEAS_SRC_CD = 'OD'
AND ACTG_DOC_LINE_NET_DUE_DT < A.ACTG_DOC_OVRDU_RPTG_DT
AND FIN_PST_RLVNC_TYPE_CD NOT IN ('X','Y')
AND A.ACTG_DOC_OVRDU_RPTG_DT >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)


LEFT JOIN @WWP_BASE_VIEW_DB@."WWP_GEO_ANY_LVL" GEO
ON B.CTRY_CD=GEO.CTRY_CD
AND GEO.GEO_TYPE_CD='CTRY'
AND GEO.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

LEFT JOIN 
(
/* Performance recomendation Change id:4001*/

SELECT CUST_ID AS CUSTOMER_NO , 
MAX(CUST_NM) AS CUSTOMER_NAME,
CO_ID, 
SNAP_MO_DT
FROM    @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT 
WHERE    ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
  GROUP BY 1,3,4
) CUST
ON A.ACTG_DOC_ACCT_ID=CUST.CUSTOMER_NO
AND A.CO_ID=CUST.CO_ID
AND A.ACTG_DOC_OVRDU_RPTG_DT=CUST.SNAP_MO_DT

WHERE POSTING_KEY<20
) A
WHERE (ACCOUNT_NO,A.COMPANY_CODE,A.RGN_IN, A.REPORT_DATE) NOT IN (SELECT CUST_ID AS ACCOUNT_NO, CO_ID AS COMPANY_CODE, RGN_IN, SNAP_MO_DT  FROM @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT
              WHERE ((RGN_IN IN ('A','E') AND CR_REP_GRP_CD ='99')
              OR (RGN_IN in ('I','R') AND ACTG_CLERK_GRP_CD='AB')) AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000') --Change id:4551

GROUP BY GROUPING SETS
(
(COMPANY_CODE,REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,CTRY_CD,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),
(COMPANY_CODE,REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,CTRY_CD,REPORT_DATE),-- Added as part of Change ID#3802   

(REGION_ID,REPORT_DATE),
(REGION_ID,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,CTRY_CD,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,CTRY_CD,ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE),

(REPORT_DATE),
(ACCOUNT_NO,CUSTOMER_NAME,REPORT_DATE)

)
) OD

LEFT JOIN TOTAL_DEBT TD
ON OD.REGION_ID=TD.REGION_ID
AND OD.CLUSTER_ID=TD.CLUSTER_ID
AND OD.MCO_ID=TD.MCO_ID
AND OD.MSO_ID=TD.MSO_ID
AND OD.COUNTRY_CODE=TD.COUNTRY_CODE
AND OD.ACCOUNT_NO=TD.ACCOUNT_NO
AND OD.CUSTOMER_NAME=TD.CUSTOMER_NAME
AND OD.COMPANY_CODE=TD.COMPANY_CODE
AND OD.REPORT_DATE=TD.REPORT_DATE

LEFT JOIN CNTL_SRV_BIL_ITEMS CSB
ON OD.REGION_ID=CSB.REGION_ID
AND OD.CLUSTER_ID=CSB.CLUSTER_ID
AND OD.MCO_ID=CSB.MCO_ID
AND OD.MSO_ID=CSB.MSO_ID
AND OD.COUNTRY_CODE=CSB.COUNTRY_CODE
AND OD.ACCOUNT_NO=TRIM(CSB.ACCOUNT_NO)
AND OD.CUSTOMER_NAME=CSB.CUSTOMER_NAME
AND OD.COMPANY_CODE=CSB.COMPANY_CODE
AND OD.REPORT_DATE=CSB.REPORT_DATE

) X

CROSS JOIN MX_MTH
) X
WHERE X.REPORT_DATE IN (SELECT RPT_DT FROM RPT_MNTS)
;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

ET;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/*  COLLECT STATS									*/
/*								                         */
/* ------------------------------------------------------------------------------------ */
 CALL DBADMIN.COLLECT_STATS ('@BASE_VIEW_DB@','FCT_OTC_OVRDU_DEBT_RPT','','V','','','','',STMNTOUT);
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;
SELECT CURRENT_TIMESTAMP ;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE
SET QUERY_BAND=NONE FOR SESSION;
.QUIT 0