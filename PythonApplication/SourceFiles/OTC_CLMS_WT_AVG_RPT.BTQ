
/*************************************************************************************
SCRIPT NAME: OTC_CLMS_WT_AVG_RPT.BTQ
DESCRIPTION: PROCESS FOR CLAIMS WEIGHTING AVG AT SEMANTIC LAYER

AUTHOR            DATE
VARUN BASAVARAJU       2016-10-12 (ORIGINAL)
COMMENTS : THIS JOB SHOULD RUN AFTER THE ETL AND OTHER SEMANTIC TABLE OTC_OVRDU_DEBT_RPT LOAD FROM OTC
TD AM SEM TEAM		2017-07-27	Performance improvement change: replacing ‘qualify’ clause with ‘group by’ Change id:4001
TD AM SEM TEAM		2018-03-27	   Adding condition to exclude region "I" data . Change id:4551
TD AM SEM TEAM		2018-05-10     Change id:4661 -Change in logic for CWA
*************************************************************************************/
.RUN FILE=@TD_LOGON@;
SET QUERY_BAND='CAPABILITY=OTC;JOB_STREAM_NM=CNLV-SMOT-CWAVG;JOB_NM=CN_LV_SM_TD_OT_WT_AVG_RPT;BTEQ_NM=OTC_CLMS_WT_AVG_RPT;'  FOR SESSION;
.SET WIDTH 255
.SET ERROROUT STDOUT

/* ------------------------------------------------------------------------------------ */
/* VOLATILE TABLE FOR LAST 13 MONTHS DATA */
/* ------------------------------------------------------------------------------------ */

CREATE VOLATILE TABLE RPT_MNTS AS
(
SELECT ACTG_DOC_OVRDU_RPTG_DT AS RPT_DT
,ROW_NUMBER() OVER (ORDER BY ACTG_DOC_OVRDU_RPTG_DT DESC ) AS RNK
 FROM 
@WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS
QUALIFY RNK <14
WHERE DERIV_MEAS_SRC_CD = 'CWA'
AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
GROUP BY 1
)
WITH DATA ON COMMIT PRESERVE ROWS
;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* VOLATILE TABLE FOR CUSTOMER COUNTRY MAPPING VENDOR DATA */
/* ------------------------------------------------------------------------------------ */



CREATE VOLATILE TABLE CUST_CTRY_MAP_VENDOR
AS
(
SELECT * FROM 
(
SELECT 
CUST_ID AS CUSTOMER_NO
,CUST_NM                 
,VEND_ID
,CO_ID
,SNAP_MO_DT
FROM @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT
WHERE VEND_ID <>''
AND VEND_ID <>'Z551'
AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND SNAP_MO_DT >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)
GROUP BY 1,2,3,4,5
)A
QUALIFY ROW_NUMBER() OVER (PARTITION BY VEND_ID,CO_ID,SNAP_MO_DT ORDER BY CUSTOMER_NO DESC)=1
)
WITH DATA ON COMMIT PRESERVE ROWS
;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* Collecting stats on Volatile table */
/* ------------------------------------------------------------------------------------ */

COLLECT	STATISTICS 
COLUMN   (VEND_ID) ,
COLUMN (SNAP_MO_DT),
COLUMN (CO_ID)
ON CUST_CTRY_MAP_VENDOR
;
/* added as part of change 4661 */
 
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* VOLATILE MAX AND MIN MONTH TABLE */
/* ------------------------------------------------------------------------------------ */


CREATE VOLATILE TABLE MX_MTH AS
(
SELECT MIN(ACTG_DOC_OVRDU_RPTG_DT) AS MIN_MTH,MAX(ACTG_DOC_OVRDU_RPTG_DT) AS MAX_MTH FROM @WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS
WHERE  DERIV_MEAS_SRC_CD = 'CWA' 
AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
)
WITH DATA ON COMMIT PRESERVE ROWS
;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* Delete all the rows to load lastest data */
/* ------------------------------------------------------------------------------------ */
BT;

DELETE FROM @BASE_VIEW_DB@.FCT_OTC_CLMS_WT_AVG_RPT;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */
/* Insert all the rows to load lastest data from EL table WWP_OTC_ACTG_DOC_LINE_MEAS */
/* ------------------------------------------------------------------------------------ */


INSERT INTO @BASE_VIEW_DB@.FCT_OTC_CLMS_WT_AVG_RPT
(
CO_ID
,RGN_ID
,CLUS_ID
,MCO_ID
,MSO_ID
,CTRY_CD
,RPT_DT
,CUST_NUM
,CUST_NM
,CURY
,CALC
,CLMS_WT_AVG
,CURY_AVG
,CALC_AVG
,CLMS_WT_AVG_ROLL
)
SELECT * FROM
(
SELECT
 B.COMPANY_CODE              
,B.REGION_ID
,B.CLUSTER_ID
,B.MCO_ID
,B.MSO_ID
,B.COUNTRY_CODE
,REPORT_DATE
,B.CUSTOMER_NO
,CUSTOMER_NAME
,(CURR_ACCT+CURR_CCT) AS CURY         
,(ACCT_CALC+CCT_CALC) AS CALC
,(ACCT_CALC+CCT_CALC)/NULLIFZERO(CURR_ACCT+CURR_CCT) AS CLMS_WT_AVG
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN SUM(CURY) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,B.CUSTOMER_NO,B.CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS CURY_AVG
,CASE WHEN REPORT_DATE>MIN_MTH+305 THEN SUM(CALC) OVER (PARTITION BY COMPANY_CODE,REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,COUNTRY_CODE,B.CUSTOMER_NO,B.CUSTOMER_NAME ORDER BY REPORT_DATE ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) END AS CALC_AVG
,CALC_AVG/NULLIFZERO(CURY_AVG) AS CLMS_WT_AVG_ROLL

FROM
(SELECT 
COALESCE(A.COMPANY_CODE,'ALL') AS COMPANY_CODE
,COALESCE(A.REGION_ID,'ALL') AS REGION_ID
,COALESCE(A.SUB_REGIONIDENTIFIER,'ALL') AS CLUSTER_ID
,COALESCE(A.MCO_ID,'ALL') AS MCO_ID
,COALESCE(A.MSO_ID,'ALL') AS MSO_ID
,COALESCE(A.COUNTRY_CODE,'ALL') AS COUNTRY_CODE
,COALESCE(A.CUSTOMER_NO,'ALL') AS ACCOUNT_NO
,TRIM(COALESCE(CUSTOMER_NO,'ALL')) AS CUSTOMER_NO  
,COALESCE(CUSTOMER_NAME,'ALL') AS CUSTOMER_NAME
,REPORT_DATE
,SUM(COALESCE(ACCT,0.00)) AS ACCT_CALC
,SUM(COALESCE(CCT,0.00)) AS CCT_CALC
,SUM(COALESCE(CURRENCY_ACCT,0.00)) AS CURR_ACCT
,SUM(COALESCE(CURRENCY_CCT,0.00)) AS CURR_CCT

FROM
(
SELECT 
A.COMPANY_CODE,
COALESCE(GEO.RGN_ID,'UNKWN') AS REGION_ID,
COALESCE(GEO.CLUS_ID,'UNKWN') AS SUB_REGIONIDENTIFIER,
COALESCE(GEO.MCO_ID,'UNKWN') AS MCO_ID,
COALESCE(GEO.MSO_ID,'UNKWN') AS MSO_ID,
A.COUNTRY_CODE,
A.CUSTOMER_NO,
COALESCE(CUSTOMER_NAME,'UNKNOWN') AS CUSTOMER_NAME
,A.RGN_IN
,REPORT_DATE
,ACCT
,CCT
,CURRENCY_ACCT
,CURRENCY_CCT
FROM
(
SELECT
TYPE_CD                       
,COUNTRY_CODE                  
,COMPANY_CODE 
,DOC_NO
,REPORT_DATE
,TRIM(CUSTOMER_NO) AS CUSTOMER_NO
,POSTING_DATE  
,CLEARING_DATE
,AMT_LOC_CURR
,RGN_IN
,CASE WHEN TYPE_CD='ACCT' THEN AMT_LOC_CURR*(REPORT_DATE-POSTING_DATE) END AS ACCT
,CASE WHEN TYPE_CD='CCT' THEN AMT_LOC_CURR*(CLEARING_DATE-POSTING_DATE) END AS CCT
,CASE WHEN TYPE_CD='ACCT' THEN AMT_LOC_CURR END AS CURRENCY_ACCT
,CASE WHEN TYPE_CD='CCT' THEN AMT_LOC_CURR END AS CURRENCY_CCT

FROM
(
SELECT
ACTG_DOC_LINE_CLRG_STS_CD AS TYPE_CD                      
,B.CTRY_CD AS COUNTRY_CODE                  
,A.CO_ID AS COMPANY_CODE 
,ACTG_DOC_ID AS DOC_NO
,ACTG_DOC_OVRDU_RPTG_DT AS REPORT_DATE
,COALESCE(ACTG_DOC_ACCT_ID,'UNKWN') AS CUSTOMER_NO
,ACTG_DOC_PST_DT AS POSTING_DATE  
,ACTG_DOC_LINE_CLRG_DT AS CLEARING_DATE
,A.RGN_IN
,CAST(( CASE WHEN (POSITION(' ' IN TRIM(ACTG_DOC_PST_KEY_CD)) > 0) OR (UPPER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC) <> LOWER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC))         THEN  NULL        ELSE ACTG_DOC_PST_KEY_CD         END ) AS INTEGER) AS POSTING_KEY
,SUM(EUR_CURY_OVRDU_DEBT_AMT) AS AMT_LOC_CURR

FROM @WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS A

JOIN @WWP_BASE_VIEW_DB@.WWP_CO B
ON A.CO_ID=B.CO_ID
AND B.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND A.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND A.DERIV_MEAS_SRC_CD = 'CWA'
AND A.ACTG_DOC_OVRDU_RPTG_DT >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)

WHERE POSTING_KEY < 20

GROUP BY 1,2,3,4,5,6,7,8,9,10

UNION ALL
(
SELECT
ACTG_DOC_LINE_CLRG_STS_CD AS TYPE_CD                       
,B.CTRY_CD AS COUNTRY_CODE                  
,A.CO_ID AS COMPANY_CODE 
,ACTG_DOC_ID AS DOC_NO
,ACTG_DOC_OVRDU_RPTG_DT AS REPORT_DATE
,COALESCE(CUST.CUSTOMER_NO,'UNKWN') AS CUSTOMER_NO
,ACTG_DOC_PST_DT AS POSTING_DATE  
,ACTG_DOC_LINE_CLRG_DT AS CLEARING_DATE
,A.RGN_IN
,CAST(( CASE WHEN (POSITION(' ' IN TRIM(ACTG_DOC_PST_KEY_CD)) > 0) OR (UPPER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC) <> LOWER(TRIM(ACTG_DOC_PST_KEY_CD)) (CASESPECIFIC))         THEN  NULL        ELSE ACTG_DOC_PST_KEY_CD         END ) AS INTEGER) AS POSTING_KEY
,SUM(EUR_CURY_OVRDU_DEBT_AMT) AS AMT_LOC_CURR

FROM @WWP_BASE_VIEW_DB@.WWP_OTC_ACTG_DOC_LINE_MEAS A

JOIN @WWP_BASE_VIEW_DB@.WWP_CO B
ON A.CO_ID=B.CO_ID
AND A.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND B.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
AND A.DERIV_MEAS_SRC_CD = 'CWA'
AND A.ACTG_DOC_OVRDU_RPTG_DT >= (SELECT ADD_MONTHS(MIN(RPT_DT),-12) FROM RPT_MNTS)


LEFT JOIN CUST_CTRY_MAP_VENDOR CUST
ON TRIM(A.ACTG_DOC_ACCT_ID)=TRIM(CUST.VEND_ID)
AND A.ACTG_DOC_OVRDU_RPTG_DT=CUST.SNAP_MO_DT
/* Change id:4661 -Change in logic for CWA */
AND A.CO_ID = CUST.CO_ID

WHERE POSTING_KEY > 20 AND POSTING_KEY < 40


GROUP BY 1,2,3,4,5,6,7,8,9,10
)
)T1


)A

LEFT JOIN @WWP_BASE_VIEW_DB@."WWP_GEO_ANY_LVL" GEO
ON A.COUNTRY_CODE=GEO.CTRY_CD
AND GEO.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

LEFT JOIN 
(
/* Performance recomendation Change id:4001*/

SELECT CUST_ID AS CUSTOMER_NO , 
MAX(CUST_NM) AS CUSTOMER_NAME, 
CO_ID, 
SNAP_MO_DT
FROM    @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT 
WHERE    ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'
  GROUP BY 1,3,4
) CUST
ON A.CUSTOMER_NO=CUST.CUSTOMER_NO
AND A.COMPANY_CODE=CUST.CO_ID
AND A.REPORT_DATE=CUST.SNAP_MO_DT
)A
WHERE (CUSTOMER_NO,A.COMPANY_CODE,A.RGN_IN, A.REPORT_DATE) NOT IN (SELECT CUST_ID AS ACCOUNT_NO, CO_ID AS COMPANY_CODE, RGN_IN, SNAP_MO_DT  FROM @WWP_BASE_VIEW_DB@.WWP_CUST_CO_ASGNMT
														WHERE ((RGN_IN IN ('A','E') AND CR_REP_GRP_CD ='99')
														OR (RGN_IN in ('I','R') AND ACTG_CLERK_GRP_CD='AB') )AND ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000') --Change id:4551

GROUP BY GROUPING SETS
(
(COMPANY_CODE,REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,REPORT_DATE),
(REGION_ID,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),

(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,REPORT_DATE),
(REGION_ID,SUB_REGIONIDENTIFIER,MCO_ID,MSO_ID,COUNTRY_CODE,CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE),

(REPORT_DATE),
(CUSTOMER_NO,CUSTOMER_NAME,REPORT_DATE)

)

)B

CROSS JOIN MX_MTH
) C 

WHERE C.REPORT_DATE IN (SELECT RPT_DT FROM RPT_MNTS)
;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;
ET;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;
/* ------------------------------------------------------------------------------------ */
/*  COLLECT STATS									*/
/*								                         */
/* ------------------------------------------------------------------------------------ */
 CALL DBADMIN.COLLECT_STATS ('@BASE_VIEW_DB@','FCT_OTC_CLMS_WT_AVG_RPT','','V','','','','',STMNTOUT);
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;
SELECT CURRENT_TIMESTAMP ;
.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE
SET QUERY_BAND=NONE FOR SESSION;
.QUIT 0
