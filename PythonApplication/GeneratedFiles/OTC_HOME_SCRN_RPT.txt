/*************************************************************************************

SCRIPT NAME: OTC_HOME_SCRN_RPT.BTQ

DESCRIPTION: PROCESS FOR MATERIALIZING THE FINAL SUMMARY AT SEMANTIC LAYER

AUTHOR                 DATE			COMMENTS

VARUN BASAVARAJU       2016-10-12 (ORIGINAL) 	THIS JOB SHOULD RUN AFTER THE ETL AND OTHER SEMANTIC TABLES LOAD FROM OTC

SRINIVASA RAO KINTALI  2017-02-23		KPI'S OSA DT & MT, CCFOT AND DISPATCH RATE, PRICING AND LOGISTIC CLAIMS are added.	

*************************************************************************************/

.RUN FILE=@TD_LOGON@;

SET QUERY_BAND='CAPABILITY=OTC;JOB_STREAM_NM=CNLV-SMOT-SUMMRY;JOB_NM=CN_LV_SM_TD_OT_SCRN_RPT;BTEQ_NM=OTC_HOME_SCRN_RPT;'  FOR SESSION;

.SET WIDTH 255

.SET ERROROUT STDOUT

/* ------------------------------------------------------------------------------------ */

/* Delete all the rows to load lastest 3 months data */

/* ------------------------------------------------------------------------------------ */

BT;

DELETE FROM @BASE_VIEW_DB@.FCT_OTC_HOME_SCRN_RPT;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */

/* Insert lastest 3 months OVERDUE DEBT NET data */

/* ------------------------------------------------------------------------------------ */

INSERT INTO @BASE_VIEW_DB@.FCT_OTC_HOME_SCRN_RPT

(

RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,RPT_DT

,KPI_CD

,KPI_DESC

,KPI_VAL

,KPI_TGT

)

SELECT

RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,RPT_DT

,'OCOVD' AS KPI_CD

,CAST('OVERDUE DEBT NET %' AS VARCHAR(100)) AS KPI_Desc

,OVRDU_DEBT_NET_PCT AS KPI_VALUE

,NULL AS KPI_TARGET

FROM @BASE_VIEW_DB@.FCT_OTC_OVRDU_DEBT_RPT

WHERE CUST_NUM='ALL' AND CO_ID='ALL' 

QUALIFY RANK() OVER (PARTITION BY  RGN_ID,CLUS_ID,MCO_ID,MSO_ID,CTRY_CD ORDER BY  RPT_DT DESC )<=3;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */

/* Insert lastest 3 months CLAIMS WEIGHTED AVERAGE data */

/* ------------------------------------------------------------------------------------ */

INSERT INTO @BASE_VIEW_DB@.FCT_OTC_HOME_SCRN_RPT

(

RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,RPT_DT

,KPI_CD

,KPI_DESC

,KPI_VAL

,KPI_TGT

)

SELECT

CWA.RGN_ID

,CWA.CLUS_ID

,CWA.MCO_ID

,CWA.MSO_ID

,CWA.CTRY_CD

,CWA.RPT_DT

,'OCCWA' AS KPI_CD

,'CLAIMS WEIGHTED AVERAGE' AS KPI_DESC

,CWA.CLMS_WT_AVG AS KPI_VALUE

,TGT.KPI_TGT KPI_TARGET

 FROM @BASE_VIEW_DB@."FCT_OTC_CLMS_WT_AVG_RPT" CWA

 

  LEFT OUTER JOIN @BASE_VIEW_DB@.FCT_OTC_KEY_PERF_IN_TGT TGT

 ON CWA."RGN_ID"=TGT.RGN_ID

 AND CWA.CLUS_ID=TGT.CLUS_ID

 AND CWA.MCO_ID=TGT.MCO_ID

 AND CWA.MSO_ID=TGT.MSO_ID

 AND CWA.CTRY_CD=TGT.CTRY_CD

 AND EXTRACT (YEAR FROM (CWA.RPT_DT)) = TGT.YR_NUM 

AND CWA.CUST_NUM='ALL'

AND TGT.KPI_CD='OCCWA'

WHERE CWA.CUST_NUM='ALL' AND CO_ID='ALL'

QUALIFY RANK() OVER (PARTITION BY CWA.RGN_ID,CWA.CLUS_ID,CWA.MCO_ID,CWA.MSO_ID,CWA.CTRY_CD ORDER BY CWA.RPT_DT DESC) <=3;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */

/* Insert lastest 3 months DAY SALES OUTSTANDING data */

/* ------------------------------------------------------------------------------------ */

INSERT INTO @BASE_VIEW_DB@.FCT_OTC_HOME_SCRN_RPT

(

RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,RPT_DT

,KPI_CD

,KPI_DESC

,KPI_VAL

,KPI_TGT

)

SELECT

DSO.RGN_ID

,DSO.CLUS_ID

,DSO.MCO_ID

,DSO.MSO_ID

,DSO.CTRY_CD

,DSO.RPT_DT

,'OCDSO' AS KPI_CD

,'DAY SALES OUTSTANDING' AS KPI_ESC

,DSO AS KPI_VALUE

,TGT.KPI_TGT AS KPI_TARGET

FROM @BASE_VIEW_DB@.FCT_OTC_DAY_SLS_OUT_RPT DSO

  LEFT OUTER JOIN @BASE_VIEW_DB@.FCT_OTC_KEY_PERF_IN_TGT TGT

 ON DSO."RGN_ID"=TGT.RGN_ID

 AND DSO.CLUS_ID=TGT.CLUS_ID

 AND DSO.MCO_ID=TGT.MCO_ID

 AND DSO.MSO_ID=TGT.MSO_ID

 AND DSO.CTRY_CD=TGT.CTRY_CD

 AND EXTRACT (YEAR FROM (DSO.RPT_DT)) = TGT.YR_NUM 

AND TGT.KPI_CD='OCDSO'

QUALIFY RANK() OVER (PARTITION BY DSO.RGN_ID,DSO.CLUS_ID,DSO.MCO_ID,DSO.MSO_ID,DSO.CTRY_CD ORDER BY DSO.RPT_DT DESC) <=3

;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */

/* Insert lastest 3 months CCFOT data */

/* ------------------------------------------------------------------------------------ */

INSERT INTO @BASE_VIEW_DB@.FCT_OTC_HOME_SCRN_RPT

(

RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,RPT_DT

,KPI_CD

,KPI_DESC

,KPI_VAL

)

SELECT

XX.RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,XX.MONTH_DATE

,KPI

,KPI_DESC

,XX.KPI_VALUE AS KPI_VALUE

FROM 

(

SELECT  

COALESCE(RGN_ID,'ALL') AS RGN_ID,

COALESCE(SOCCF.MGT_SCH_LVL_2_ID,'ALL')  AS CLUS_ID,

COALESCE(SOCCF.MGT_SCH_LVL_3_ID,'ALL') AS MCO_ID,

COALESCE(GEO.MSO_ID,'ALL') AS MSO_ID,

COALESCE(SOCCF.CTRY_CD,'ALL') AS CTRY_CD,

MO_SNAP_RPTG_DT AS MONTH_DATE,

KPI.KEY_PERF_IN_CD AS KPI,

KPI.KEY_PERF_IN_DESC AS KPI_DESC,

(SUM(SUPL_CHN_OUTP_VAL1_QT)/NULLIFZERO(SUM(SUPL_CHN_OUTP_VAL2_QT)))*100 AS KPI_VALUE

FROM @WWP_BASE_VIEW_DB@."WWP_SUPL_CHN_OUTP_MEAS" SOCCF

LEFT JOIN @WWP_BASE_VIEW_DB@.WWP_GEO_ANY_LVL GEO

ON SOCCF.CTRY_CD=GEO.CTRY_CD

AND GEO.GEO_TYPE_CD='CTRY'

AND GEO.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

INNER JOIN @WWP_BASE_VIEW_DB@.WWP_KEY_PERF_IN KPI

ON KPI.KEY_PERF_IN_CD='KOCCF'

AND KPI.KEY_PERF_IN_CD=SOCCF.KEY_PERF_IN_CD

AND KPI.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

AND SOCCF.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

GROUP BY GROUPING SETS

(

(RGN_ID,MGT_SCH_LVL_2_ID,MGT_SCH_LVL_3_ID,MSO_ID,SOCCF.CTRY_CD,MONTH_DATE,KPI,KPI_DESC),

(RGN_ID,MGT_SCH_LVL_2_ID,MGT_SCH_LVL_3_ID,MSO_ID,MONTH_DATE,KPI,KPI_DESC),

(RGN_ID,MGT_SCH_LVL_2_ID,MGT_SCH_LVL_3_ID,MONTH_DATE,KPI,KPI_DESC),

(RGN_ID,MGT_SCH_LVL_2_ID,MONTH_DATE,KPI,KPI_DESC),

(RGN_ID,MONTH_DATE,KPI,KPI_DESC),

(MONTH_DATE,KPI,KPI_DESC)

)

)XX

QUALIFY RANK() OVER (PARTITION BY  RGN_ID,CLUS_ID,MCO_ID,MSO_ID,CTRY_CD,KPI,KPI_DESC ORDER BY  MONTH_DATE DESC )<=3;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */

/* Insert lastest 3 months Logistics Dispatch Rate data */

/* ------------------------------------------------------------------------------------ */

INSERT INTO @BASE_VIEW_DB@.FCT_OTC_HOME_SCRN_RPT

(

RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,RPT_DT

,KPI_CD

,KPI_DESC

,KPI_VAL

)

SELECT

XX.REGION_ID

,CLUSTER_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,XX.MONTH_DATE

,'KOLDR'

,'LOGISTICS DISPATCH RATE' AS KPI

,XX.KPI_VALUE AS KPI_VALUE

FROM 

(

SELECT  

COALESCE(REGION_ID,'ALL') AS REGION_ID,

COALESCE(CLUSTER_ID,'ALL')  AS CLUSTER_ID,

COALESCE(MCO_ID,'ALL') AS MCO_ID,

COALESCE(MSO_ID,'ALL') AS MSO_ID,

COALESCE(CTRY_CD,'ALL') AS CTRY_CD,

TRAN_MO_DT AS MONTH_DATE,

100*SUM(ORD_DSPCHED_IN_CASE_QT)/NULLIFZERO(SUM(CUST_EXPTD_ORD_IN_CASE_QT)) AS KPI_VALUE 

FROM

@SEM_VIEW_DB@.LGSTCS_DSP_RT_TM_DLVRY_RPT_VW

GROUP BY GROUPING SETS

(

(REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,CTRY_CD,MONTH_DATE),

(REGION_ID,MONTH_DATE),

(REGION_ID,CLUSTER_ID,MONTH_DATE),

(REGION_ID,CLUSTER_ID,MCO_ID,MONTH_DATE),

(REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,MONTH_DATE),

(MONTH_DATE)

)  

)XX

QUALIFY RANK() OVER (PARTITION BY  REGION_ID,CLUSTER_ID,MCO_ID,MSO_ID,CTRY_CD ORDER BY  MONTH_DATE DESC )<=3;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */

/* Insert lastest 3 months Logistics and Pricing CLAIMS data */

/* ------------------------------------------------------------------------------------ */

INSERT INTO @BASE_VIEW_DB@.FCT_OTC_HOME_SCRN_RPT

(

RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,RPT_DT

,KPI_CD

,KPI_DESC

,KPI_VAL

)

SELECT

OC.RGN_ID

,OC.CLUS_ID

,OC.MCO_ID

,OC.MSO_ID

,OC.CTRY_CD

,OC.RPT_DT

,KPI_CD

,CASE WHEN KPI_CD='OCOLC' THEN 'LOGISTICS CLAIM %' ELSE 'PRICING CLAIM %' END AS KPI_DESC

,OC.KPI_CLM_PCT AS KPI_VALUE

 FROM @BASE_VIEW_DB@."FCT_OTC_ME_OPEN_CLMS_RPT" OC

WHERE OC.CUST_NUM='ALL'

QUALIFY RANK() OVER (PARTITION BY OC.RGN_ID,OC.CLUS_ID,OC.MCO_ID,OC.MSO_ID,OC.CTRY_CD,OC.KPI_CD ORDER BY OC.RPT_DT DESC) <=3;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */

/* Insert lastest 3 months Debtor Days data */

/* ------------------------------------------------------------------------------------ */

INSERT INTO @BASE_VIEW_DB@.FCT_OTC_HOME_SCRN_RPT

(

RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,RPT_DT

,KPI_CD

,KPI_DESC

,KPI_VAL

,KPI_TGT

)

SELECT

XX.RGN_ID

,XX.CLUS_ID

,XX.MCO_ID

,XX.MSO_ID

,XX.CTRY_CD

,XX.MONTH_DATE

,KPI

,XX.KPI_DESC

,XX.KPI_VALUE AS KPI_VALUE

,KPI_TGT

FROM 

(SELECT

		COALESCE(FODD.RGN_ID,'ALL') AS RGN_ID

		,COALESCE(FODD.CLUS_ID,'ALL') AS CLUS_ID

		,COALESCE(FODD.MCO_ID,'ALL') AS MCO_ID

		,COALESCE(FODD.MSO_ID,'ALL') AS MSO_ID

		,COALESCE(FODD.CTRY_CD,'ALL') AS CTRY_CD

		,'OCDBD' AS KPI

		,'DEBTOR DAYS' AS KPI_DESC

		,FODD.RPTG_MO_DT AS MONTH_DATE                      

		,SUM(FODD.MVG_ANL_TOT_AVG_RCVBL_AMT)*365/NULLIFZERO(SUM(FODD.MVG_ANL_TOT_SUM_TRUNOVR_AMT)) AS KPI_VALUE

		FROM 

		(

			SELECT

			COALESCE(GEO.RGN_ID,'UNKWN') AS RGN_ID

			,COALESCE(GEO.CLUS_ID,'UNKWN') AS CLUS_ID

			,COALESCE(GEO.MCO_ID,'UNKWN') AS MCO_ID

			,COALESCE(GEO.MSO_ID,'UNKWN') AS MSO_ID

			,DD.CTRY_CD AS CTRY_CD

			,DD.RPTG_MO_DT  

			,DD.MVG_ANL_TOT_AVG_RCVBL_AMT

			,DD.MVG_ANL_TOT_SUM_TRUNOVR_AMT

			FROM @WWP_BASE_VIEW_DB@."WWP_OTC_DEBTOR_DAYS" DD

			LEFT JOIN @WWP_BASE_VIEW_DB@.WWP_GEO_ANY_LVL GEO

			ON DD.CTRY_CD = GEO.CTRY_CD

			AND GEO.GEO_TYPE_CD='CTRY'

			AND GEO.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

			AND DD.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

		) FODD

		GROUP BY GROUPING SETS

		(

		(RGN_ID,CLUS_ID,MCO_ID,MSO_ID,CTRY_CD,RPTG_MO_DT),

		(RGN_ID,CLUS_ID,MCO_ID,MSO_ID,RPTG_MO_DT),

		(RGN_ID,CLUS_ID,MCO_ID,RPTG_MO_DT),

		(RGN_ID,CLUS_ID,RPTG_MO_DT),

		(RGN_ID,RPTG_MO_DT),

		(RPTG_MO_DT)

		)

		)XX

 LEFT OUTER JOIN @BASE_VIEW_DB@.FCT_OTC_KEY_PERF_IN_TGT TGT

 ON XX."RGN_ID"=TGT.RGN_ID

 AND XX.CLUS_ID=TGT.CLUS_ID

 AND XX.MCO_ID=TGT.MCO_ID

 AND XX.MSO_ID=TGT.MSO_ID

 AND XX.CTRY_CD=TGT.CTRY_CD

 AND EXTRACT (YEAR FROM (XX.MONTH_DATE)) = TGT.YR_NUM 

AND TGT.KPI_CD='OCDBD'

QUALIFY RANK() OVER (PARTITION BY  XX.RGN_ID,XX.CLUS_ID,XX.MCO_ID,XX.MSO_ID,XX.CTRY_CD,XX.KPI,XX.KPI_DESC ORDER BY  MONTH_DATE DESC )<=3;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */

/* Insert lastest 3 months INVOICE ACCURACY data */

/* ------------------------------------------------------------------------------------ */

INSERT INTO @BASE_VIEW_DB@.FCT_OTC_HOME_SCRN_RPT

(

RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,RPT_DT

,KPI_CD

,KPI_DESC

,KPI_VAL

,KPI_TGT

)

SELECT

IVA.RGN_ID

,IVA.CLUS_ID

,IVA.MCO_ID

,IVA.MSO_ID

,IVA.CTRY_CD

,IVA.RPT_DT

,'OTIAC' AS KPI_CD

,'TOTAL INVOICE ACCURACY' AS KPI_ESC

,NULLIFZERO(TOT_INVC_ACUR_PCT) AS KPI_VALUE

,TGT.KPI_TGT AS KPI_TARGET

FROM @BASE_VIEW_DB@.FCT_OTC_INVC_ACUR_RPT IVA

  LEFT OUTER JOIN @BASE_VIEW_DB@.FCT_OTC_KEY_PERF_IN_TGT TGT

 ON IVA."RGN_ID"=TGT.RGN_ID

 AND IVA.CLUS_ID=TGT.CLUS_ID

 AND IVA.MCO_ID=TGT.MCO_ID

 AND IVA.MSO_ID=TGT.MSO_ID

 AND IVA.CTRY_CD=TGT.CTRY_CD

 AND EXTRACT (YEAR FROM (IVA.RPT_DT)) = TGT.YR_NUM 

AND TGT.KPI_CD='OTIAC'

QUALIFY RANK() OVER (PARTITION BY IVA.RGN_ID,IVA.CLUS_ID,IVA.MCO_ID,IVA.MSO_ID,IVA.CTRY_CD ORDER BY IVA.RPT_DT DESC) <=3

;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */

/* Insert lastest 3 months Automated Orders data */

/* ------------------------------------------------------------------------------------ */

INSERT INTO @BASE_VIEW_DB@.FCT_OTC_HOME_SCRN_RPT

(

RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,RPT_DT

,KPI_CD

,KPI_DESC

,KPI_VAL

,KPI_TGT

)

SELECT

AOR.RGN_ID

,AOR.CLUS_ID

,AOR.MCO_ID

,AOR.MSO_ID

,AOR.CTRY_CD

,AOR.RPT_DT

,'OFAOR' AS KPI_CD

,'Fully Automated Orders' AS KPI_ESC

,NULLIFZERO(FULL_AUTO_ORD_PCT) AS KPI_VALUE

,TGT.KPI_TGT AS KPI_TARGET

FROM @BASE_VIEW_DB@.FCT_OTC_AUTO_ORD_RPT AOR

 LEFT OUTER JOIN @BASE_VIEW_DB@.FCT_OTC_KEY_PERF_IN_TGT TGT

 ON AOR."RGN_ID"=TGT.RGN_ID

 AND AOR.CLUS_ID=TGT.CLUS_ID

 AND AOR.MCO_ID=TGT.MCO_ID

 AND AOR.MSO_ID=TGT.MSO_ID

 AND AOR.CTRY_CD=TGT.CTRY_CD

 AND EXTRACT (YEAR FROM (AOR.RPT_DT)) = TGT.YR_NUM 

AND TGT.KPI_CD='OFAOR'

QUALIFY RANK() OVER (PARTITION BY AOR.RGN_ID,AOR.CLUS_ID,AOR.MCO_ID,AOR.MSO_ID,AOR.CTRY_CD ORDER BY AOR.RPT_DT DESC) <=3

;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */

/* Insert lastest 3 months CAOT data */

/* ------------------------------------------------------------------------------------ */

INSERT INTO @BASE_VIEW_DB@.FCT_OTC_HOME_SCRN_RPT

(

RGN_ID

,CLUS_ID

,MCO_ID

,MSO_ID

,CTRY_CD

,RPT_DT

,KPI_CD

,KPI_DESC

,KPI_VAL

,KPI_TGT

)

SELECT

A.RGN_ID

,A.CLUS_ID

,A.MCO_ID

,A.MSO_ID

,A.CTRY_CD

,RPTG_MO_DT

,'OCAOT'

,'CASH APPLICATION ON TIME'

,Coalesce(100.00 * Y_COUNT / ALL_COUNT, 0) AS CASH_APP_ON_TIME_PER

,TGT.KPI_TGT AS CASH_APP_ON_TIME_TGT     

FROM

(

SELECT 

COALESCE(GEO.RGN_ID,'ALL') AS RGN_ID

,COALESCE(GEO.CLUS_ID,'ALL') AS CLUS_ID 

,COALESCE(GEO.MCO_ID,'ALL') AS MCO_ID 

,COALESCE(GEO.MSO_ID,'ALL') AS MSO_ID

,COALESCE(B.CTRY_CD,'ALL') AS CTRY_CD

,A.RPTG_MO_DT

,Sum(CASE WHEN RCVBL_CLRNC_ONTME_IN='Y' THEN 1 ELSE 0 END) AS Y_COUNT

,Count(*) AS ALL_COUNT

FROM @WWP_BASE_VIEW_DB@.WWP_OTC_CASH_CLM_RCVBL_AGG A

INNER JOIN @WWP_BASE_VIEW_DB@.WWP_CO AS B

ON A.CO_ID=B.CO_ID

AND A.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000' 

AND B.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

INNER JOIN @WWP_BASE_VIEW_DB@.WWP_GEO_ANY_LVL GEO

ON B.CTRY_CD = GEO.CTRY_CD

AND GEO.GEO_TYPE_CD='CTRY'

AND GEO.ETL_JOB_END_DTTM='2999-12-31 00:00:00.000000'

--AND RPTG_MO_DT IN (SELECT RPT_DT FROM RPT_MNTS)

GROUP BY GROUPING SETS 

(

(GEO.RGN_ID,GEO.CLUS_ID,GEO.MCO_ID,GEO.MSO_ID,B.CTRY_CD,RPTG_MO_DT)

,(GEO.RGN_ID,GEO.CLUS_ID,GEO.MCO_ID,GEO.MSO_ID,RPTG_MO_DT)

,(GEO.RGN_ID,GEO.CLUS_ID,GEO.MCO_ID,RPTG_MO_DT)

,(GEO.RGN_ID,GEO.CLUS_ID,RPTG_MO_DT)

,(GEO.RGN_ID,RPTG_MO_DT)

,(RPTG_MO_DT)

)

) A

LEFT OUTER JOIN @BASE_VIEW_DB@.FCT_OTC_KEY_PERF_IN_TGT TGT

 ON A.RGN_ID=TGT.RGN_ID

 AND A.CLUS_ID=TGT.CLUS_ID

 AND A.MCO_ID=TGT.MCO_ID

 AND A.MSO_ID=TGT.MSO_ID

 AND A.CTRY_CD=TGT.CTRY_CD

 AND EXTRACT(YEAR FROM RPTG_MO_DT) =TGT.YR_NUM

AND TGT.KPI_CD='OCAOT'

QUALIFY RANK() OVER (PARTITION BY  A.RGN_ID,A.CLUS_ID,A.MCO_ID,A.MSO_ID,A.CTRY_CD ORDER BY  RPTG_MO_DT DESC )<=3;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

ET;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

/* ------------------------------------------------------------------------------------ */

/*  COLLECT STATS									*/

/*								                         */

/* ------------------------------------------------------------------------------------ */

 CALL DBADMIN.COLLECT_STATS ('@BASE_VIEW_DB@','FCT_OTC_HOME_SCRN_RPT','','V','','','','',STMNTOUT);

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE;

SELECT CURRENT_TIMESTAMP ;

.IF ERRORCODE <> 0 THEN .QUIT  ERRORCODE

SET QUERY_BAND=NONE FOR SESSION;

.QUIT 0

